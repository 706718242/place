使用 WebSocket API 可以在浏览器端实现与服务器之间的实时全双工通信。WebSocket API 可以直接在浏览器端使用，不需要额外的库或框架。 以下是使用 WebSocket API 的基本示例代码： 1. 创建 WebSocket 对象，并与指定的服务器建立连接： ```javascript const socket = new WebSocket('ws://example.com/socketserver'); ``` 在上面的示例中，通过 WebSocket 构造函数创建了一个 WebSocket 对象，并将 WebSocket 服务器的地址传递给构造函数。 2. 监听 WebSocket 对象的事件： ```javascript socket.addEventListener('open', function (event) { console.log('WebSocket connection is open.'); }); socket.addEventListener('message', function (event) { console.log('Received Message: ' + event.data); }); socket.addEventListener('close', function (event) { console.log('WebSocket connection is 
的事件。当连接打开时，会触发 `open` 事件，当接收到消息时会触发 `message` 事件，当连接关闭时会触发 `close` 事件。在事件处理函数中，可以在控制台中输出日志信息，并进行相应的操作，例如更新用户界面等。 3. 向服务器发送消息： ```javascript socket.send('Hello, World!'); ``` 在上面的示例中，通过 `socket.send()` 方法来向 WebSocket 服务器发送消息。可以发送文本或二进制数据。 在使用 WebSocket API 进行通信时，需要注意以下问题： - WebSocket API 适用于在浏览器端和服务器端之间进行实时全双工通信，但是并不是所有的浏览器都支持 WebSocket API，需要进行兼容性处理； - WebSocket API 支持传输文本和二进制数据，但是需要注意数据格式和大小，以避免影响通信性能； - WebSocket API 在进行跨域通信时，需要在服务器端设置 CORS 相关响应头，以允许来自其他域名的 JavaScript 代码进行 WebSocket 通信。



是的，Microsoft Edge 支持使用 WebSocket API 进行实时全双工通信。WebSocket API 可以在支持 WebSocket 协议的浏览器中运行，包括 Microsoft Edge、Google Chrome、Mozilla Firefox、Apple Safari 等主流浏览器。 可以使用类似以下示例代码来创建 WebSocket 连接并发送消息： ```javascript const ws = new WebSocket('wss://example.com/socketserver'); ws.onopen = function(event) { console.log('WebSocket connection is open.'); ws.send('Hello, world!'); }; ws.onmessage = function(event) { console.log(`Received Message: ${event.data}`); }; ws.onerror = function(event) { console.error('WebSocket error occurred.'); }; ws.onclose = function(event) { console.log('WebSocket connection is closed.'); }; ``` 以上示例代码创建了一个 WebSocket 对象，并使用该对象连接到服务器。当连接建立时，使用 `onopen` 事件发送消息，当接收到消息时使用 `onmessage` 事件处理接收到的消息。如果在建立连接或通信过程中发生错误，可以使用 `onerror` 事件进行处理；如果连接关闭，可以使用 `onclose` 事件进行处理。 请注意，在使用 WebSocket API 进行通信时，需要注意浏览器兼容性，尤其是在处理二进制数据类型时。此外，需要根据具体情况检查服务器是否支持 WebSocket 协议，以及是否需要在服务器端进行特殊配置。

const socket = new WebSocket('ws://example.com/socketserver');
socket.addEventListener('open', function (event) {
  console.log('WebSocket connection is open.');
});

socket.addEventListener('message', function (event) {
  console.log('Received Message: ' + event.data);
});

socket.addEventListener('close', function (event) {
  console.log('WebSocket connection is closed.');
});

socket.send('Hello, World!');
// 向目标窗口发送消息
var targetWindow = window.parent; // 目标窗口对象
var message = 'Hello, world!'; // 要发送的数据
var targetOrigin = "https://www.targetdomain.com"; // 目标窗口的安全来源（域）

targetWindow.postMessage(message, targetOrigin);

// 监听来自其他窗口的消息
window.addEventListener("message", receiveMessage, false);

function receiveMessage(event) {
  // 判断消息来源是否被信任
  if (event.origin !== "https://www.sourcedomain.com") {
    return;
  }

  // 处理接收到的数据
  var message = event.data;
  console.log(message);
}



document.getElementById("myElement").print();

if(window.location.href=="http://172.30.11.197:8092/SMTMaterialConsumption?Project=Cisco&LineName=C23B") 
{
  box = document.createElement('tbox');
  box.id = 'tboxid';
  document.documentElement.appendChild(box);
  box.innerHTML = "";
  box.style.position= "fixed";
  box.style.top = "0";
//box.style.left = "0";
  box.style.right= "0";
  box.style.width= "390px";
  //box.style.border= 3px solid #73AD21;
  box.style.zIndex = "9999";
  box.style['top'] = '';
  box.style.display = 'block';
  box.style.fontSize = '18px';
//box.style['background-color'] = "#fff";
document.getElementById(box.id).style.color = "white";
 // document.getElementById(box.id).style.color = "block";



 var ic=[];
 var keyC=[];
 var tout=0;
 var search=0,slot=0;;
 var intervalId,intervalId1;

function clean() {
 
  var table = document.getElementById("OnMachine");
  var cells = table.getElementsByTagName("td");
  for (var i = 0; i < ic.length; i++) {
 
  cells[ic[i]].style.backgroundColor = "";
 }
 
  console.log("clean");
  search=1;
 //document.getElementById(box.id).innerHTML = "";

  
}

function tclean() {

 keyC.length = 0;
 console.log("clean");
 document.getElementById(box.id).innerHTML = "";

}




 document.addEventListener('keydown', (event) => {
 console.log(event.key);
 console.log(event.keyCode);
 console.log(keyC);


 
 clearInterval(intervalId);
 clearInterval(intervalId1);
 intervalId = setInterval(function() { tclean(); clearInterval(intervalId); }, 10000);
 intervalId1 = setInterval(function() { clean();clearInterval(intervalId1); }, 30000);
 
  if (event.keyCode!=32&&event.keyCode>47&&event.keyCode<58||event.keyCode=="189"||event.keyCode>"64"&&event.keyCode<"91") { 
 
    keyC.push(event.key);
   //
    console.log(keyC);
    
  
    //document.getEl  keyC= String.fromCharCode(event.keyCode);ementById(box.id).style.display = 'block';
   //document.getElementById(box.id).style.color = "blue";
  // keyC= String.fromCharCode(keyC);
   //console.log(keyC);
    document.getElementById(box.id).innerHTML = keyC.join('');
   
  }
 
  if(event.key=="Backspace"){
   keyC.pop();
   document.getElementById(box.id).innerHTML = keyC.join('');

   //if(keyC.join('')=="123")document.getElementById(box.id).style.color = "red";
 // document.getElementById(box.id).style.display = 'none';

   //keyC = "";
   console.log(keyC);
   clearInterval(intervalId);
  }
//Enter
  if(event.key=="Enter"){
   var frist=0;
  if(keyC!=""){
  clean() ;
  var table = document.getElementById("OnMachine");
  var searchText = keyC.join('').toLowerCase(); // 将搜索文本转换为小写字母
  var cells = table.getElementsByTagName("td");
  for (var i = 0; i < cells.length; i++) {
  var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
  if (cellText.indexOf(searchText) !== -1) {
   ic.push(i);
if(frist==0){ frist=1;cells[i].scrollIntoView({ block: "center" });console.log("i");
    cells[i].style.backgroundColor = "#ffebb5";}
  }
}

 console.log(ic);
 search=1;    //完成搜索标记
}
  console.log(search);
  console.log(slot);
  console.log(ic.length);
  
  if(search==1&&(slot<ic.length)){
  console.log("!");
  var table = document.getElementById("OnMachine");
  var cells = table.getElementsByTagName("td");
  cells[ic[slot]].style.backgroundColor = "#ffebb5";
  cells[ic[slot]].scrollIntoView({ block: "center" });
    slot++;
  }
  if(search==1&&slot>ic.length){
    console.log("!1");
  var table = document.getElementById("OnMachine");
  var cells = table.getElementsByTagName("td");


    localtion=0;
   cells[ic[slot]].style.backgroundColor = "#ffebb5";
   cells[ic[slot]].scrollIntoView({ block: "center" });
  }

  
 }


 if(event.keyCode==36){

 clean() ;



  var table = document.getElementById("OnLine");
 var searchText = "5t1".toLowerCase(); // 将搜索文本转换为小写字母
 var cells = table.getElementsByTagName("tr");
 for (var i = 0; i < cells.length; i++) {
 var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
 if (cellText.indexOf(searchText) !== -1) {
   console.log(i);
  document.getElementById("OnLine").deleteRow(i);
   i--;
   
  }
 }

  
  var searchText = "5t2".toLowerCase(); // 将搜索文本转换为小写字母
 
  for (var i = 0; i < cells.length; i++) {
  var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
  if (cellText.indexOf(searchText) !== -1) {
   
    document.getElementById("OnLine").deleteRow(i);
   i--;
   
  }
  }

 var searchText = "6t1".toLowerCase(); // 将搜索文本转换为小写字母
 
 for (var i = 0; i < cells.length; i++) {
 var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
 if (cellText.indexOf(searchText) !== -1) {
   
    document.getElementById("OnLine").deleteRow(i);
   i--;
   
   
  }
 }
  var searchText = "6t2".toLowerCase(); // 将搜索文本转换为小写字母
 
  for (var i = 0; i < cells.length; i++) {
  var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
  if (cellText.indexOf(searchText) !== -1) {
   
   document.getElementById("OnLine").deleteRow(i);
   i--;
   
  }
  }

  var searchText = "7T1".toLowerCase(); // 将搜索文本转换为小写字母
 
  for (var i = 0; i < cells.length; i++) {
  var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
  if (cellText.indexOf(searchText) !== -1) {
   
   document.getElementById("OnLine").deleteRow(i);
   i--;
   
  }
  }

 var table = document.getElementById("OnMachine");
 var searchText = "14497".toLowerCase(); // 将搜索文本转换为小写字母
 var cells = table.getElementsByTagName("td");
 for (var i = 0; i < cells.length; i++) {
 var cellText = cells[i].innerHTML.toLowerCase(); // 将单元格文本转换为小写字母
 if (cellText.indexOf(searchText) !== -1) {
    ic.push(i);
   
    document.getElementById(box.id).innerHTML = cells[i].innerHTML+'  '+cells[i+2].innerHTML+'  '+cells[i+3].innerHTML+'  '+cells[i+4].innerHTML+'<br>已完成'+(cells[i+2].innerHTML-cells[i+3].innerHTML)+'  剩余'+cells[i+3].innerHTML;
    cells[i].style.backgroundColor = "#ffebb5";
    cells[i].scrollIntoView({ block: "center" });
   
  }
}  
  

//console.log(window.location.href);
}
 

 
});
}
//perpetual data
//R/W data
//localStorage.setItem("myCat", "Tom");
//const cat = localStorage.getItem("myCat");console.log(cat);

//remove data
//localStorage.removeItem("myCat");
//localStorage.clear();


//tmp data
// Save data to sessionStorage
//sessionStorage.setItem("key", "value");

// Get saved data from sessionStorage
//let data = sessionStorage.getItem("key");

// Remove saved data from sessionStorage
//sessionStorage.removeItem("key");

// Remove all saved data from sessionStorage
//sessionStorage.clear();




//document.getElementById("OnMachine").deleteRow(1);
//<>37 39
